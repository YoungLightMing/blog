(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{229:function(s,a,t){"use strict";t.r(a);var n=t(2),e=Object(n.a)({},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"在线-api-工具-——-eolinker-支持-mock-数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在线-api-工具-——-eolinker-支持-mock-数据","aria-hidden":"true"}},[s._v("#")]),s._v(" 在线 API 工具 —— eolinker (支持 mock 数据)")]),s._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("前后端分离的开发模式现在十分流行，但在日常开发中，前后端由于开发进度问题而导致相互影响。")]),s._v(" "),t("p",[s._v("前端在开发时需要数据接口，但后端还没有写出来，或者前端需要不停的去请求，来测试自己的功能，甚至需要一些极端的数据。这种情况下后端只能放下手中的获跟着前端来搞。往往会浪费大量的沟通时间。")]),s._v(" "),t("p",[s._v("而使用在线的 api 则能解决这个问题。将前后端商定好数据接口先写到第三方平台，前端需要什么样的数据自己去定制，后端也可以安心开发自己的模块。待到双方开发完毕，只需要到最后进行简单的功能联调即可。")]),s._v(" "),t("p",[s._v("这也就是"),t("a",{attrs:{href:"https://note.youdao.com/",target:"_blank",rel:"noopener noreferrer"}},[t("code",[s._v("eolinker")]),t("OutboundLink")],1),s._v(" 这个在线工具的使用必要性。")]),s._v(" "),t("h2",{attrs:{id:"样例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#样例","aria-hidden":"true"}},[s._v("#")]),s._v(" 样例")]),s._v(" "),t("p",[s._v("配置:")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://p9h2m8jxq.bkt.clouddn.com/18-10-23/14252513.jpg",alt:""}})]),s._v(" "),t("p",[s._v("生成数据：")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://p9h2m8jxq.bkt.clouddn.com/18-10-23/51396367.jpg",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),t("h3",{attrs:{id:"一、登录注册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、登录注册","aria-hidden":"true"}},[s._v("#")]),s._v(" 一、登录注册")]),s._v(" "),t("p",[s._v("根据常识执行流程即可，eolinker 提供了免费和专业版，区别在于专业版拥有更大的存储空间及更完善的服务，但如果只是想寻找一个在线 api 接口，免费的就够用了。")]),s._v(" "),t("h3",{attrs:{id:"二、新建一个项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、新建一个项目","aria-hidden":"true"}},[s._v("#")]),s._v(" 二、新建一个项目")]),s._v(" "),t("p",[s._v("点击侧边栏的 "),t("code",[s._v("api 管理")]),s._v(" 目录，可以在此处新建你的项目，或者，可以导入来自 "),t("code",[s._v("postman")]),s._v(", "),t("code",[s._v("DHC")]),s._v(", "),t("code",[s._v("swagger")]),s._v(" 等中的项目。")]),s._v(" "),t("h3",{attrs:{id:"三、-在项目中创建分组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、-在项目中创建分组","aria-hidden":"true"}},[s._v("#")]),s._v(" 三、 在项目中创建分组")]),s._v(" "),t("p",[s._v("点击创建的项目，会进入这个项目的介绍面板，包括类型，动态，接口，文档等信息。点击 "),t("code",[s._v("接口处")]),s._v("，进入 api 列表页。")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://p9h2m8jxq.bkt.clouddn.com/18-10-23/80085105.jpg",alt:""}})]),s._v(" "),t("p",[s._v("刚开始会有一个默认分组，我们可以对他进行编辑和添加子分组等操作，如图，我在这个分组下建立了两个子分组，用于管理不同的 "),t("code",[s._v("api")]),s._v(" 列表。")]),s._v(" "),t("h3",{attrs:{id:"四、创建-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、创建-api","aria-hidden":"true"}},[s._v("#")]),s._v(" 四、创建 API")]),s._v(" "),t("p",[s._v("点击 "),t("code",[s._v("新建接口")]),s._v("，进入 api 创建页。")]),s._v(" "),t("p",[s._v("按照操作填写数据即可。")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://p9h2m8jxq.bkt.clouddn.com/18-10-23/62817688.jpg",alt:""}})]),s._v(" "),t("p",[s._v("（由于我们是免费版，所以不能根据不同的入参来返回不同的出参，所以这个页面中入参列表可以选择不填。其他内容可以根据实际情况填写）")]),s._v(" "),t("p",[s._v("在填写时我们看到可以导入 "),t("code",[s._v("json")]),s._v(" ,建议将数据转成"),t("code",[s._v("json")]),s._v("后直接粘贴过来，十分方便快捷。")]),s._v(" "),t("p",[s._v("填写完成后点击保存后便可以看到这个接口的信息，并且通过复制 "),t("code",[s._v("mockURL")]),s._v(" 到需要的地方便可以正常请求接收数据。（此时注意需要按照正确的方式进行请求，比如设置的时候使用 "),t("code",[s._v("post")]),s._v(" 方式，那也需要使用 "),t("code",[s._v("post")]),s._v(" 方式调用)")]),s._v(" "),t("h3",{attrs:{id:"五、使用-mock-生成随机数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、使用-mock-生成随机数据","aria-hidden":"true"}},[s._v("#")]),s._v(" 五、使用 mock 生成随机数据")]),s._v(" "),t("p",[s._v("在新增或编辑状态下，我们能在创建 API 的上方看到  "),t("code",[s._v("Mock API")]),s._v(" 模块。点击切换。")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://p9h2m8jxq.bkt.clouddn.com/18-10-23/51102250.jpg",alt:""}})]),s._v(" "),t("p",[s._v("我们可以看到 "),t("code",[s._v("mock设置")]),s._v(" 和 "),t("code",[s._v("数据预览")]),s._v("。")]),s._v(" "),t("p",[s._v("在数据设置页，这个表格从左只有分别是"),t("code",[s._v("字段名")]),s._v(","),t("code",[s._v("类型")]),s._v(","),t("code",[s._v("生成规则")]),s._v(","),t("code",[s._v("属性值")]),s._v("。")]),s._v(" "),t("p",[s._v("前两个不多描述。")]),s._v(" "),t("p",[s._v("我们先看几个 MOCK 的实例。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 生成一个字符串,由★组成")]),s._v("\n\nMock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string|1-10"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"★"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结果：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"★★★★★★"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("此时我们需要在生成规则出填写 "),t("code",[s._v("1-10")]),s._v(" ,在属性值中 填写 "),t("code",[s._v("★")]),s._v("即可。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 生成一个 1- 100 之间的随机数")]),s._v("\n\nMock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number|1-100"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结果：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("此时我们需要在生成规则处填写 "),t("code",[s._v("1-100")]),s._v(",在属性值中不需要填写内容。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 生成一个随机的`boolean` 类型的数据")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Random.boolean()")]),s._v("\nRandom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nMock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@boolean'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nMock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@boolean()'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("上面的语法表示，这三种方式都可以用来生成一个随机 "),t("code",[s._v("boolean")]),s._v(" 值，我们只需要在属性值处填写"),t("code",[s._v("@boolean")]),s._v(" 或者 "),t("code",[s._v("@boolean()")]),s._v("。")]),s._v(" "),t("p",[s._v("其他的随机数与此类似。")]),s._v(" "),t("p",[s._v("比如生成一个由 18 个数字组成的字符串。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("Mock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@character(\"number\",18)'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("我们只需要在属性值中填写"),t("code",[s._v('@character("number",18)')]),s._v(",也就是说，填入"),t("code",[s._v("Mock.mock()")]),s._v(" 方法的参数。")]),s._v(" "),t("p",[s._v("最后，点击保存后会生成一个Mock URL，我们可以在下图中的 "),t("code",[s._v("mock")]),s._v(" 中查看并使用这个 url。")]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("eolinker 还有很多功能比如"),t("code",[s._v("自动化测试")]),s._v(","),t("code",[s._v("建立成员小组")]),s._v(" 等，大家自行探索。")])])},[],!1,null,null,null);a.default=e.exports}}]);