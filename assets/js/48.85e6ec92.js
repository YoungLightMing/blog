(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{213:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"显式-名义-与-隐式-鸭子）类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显式-名义-与-隐式-鸭子）类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 显式 (名义) 与 隐式 (鸭子）类型转换")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://younglight.top/19-1-5/25571963.jpg",alt:"显示与隐式类型转换"}})]),t._v(" "),a("h2",{attrs:{id:"_1-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 前言")]),t._v(" "),a("p",[t._v("说实话，JavaScript 的类型转换是个相当头疼的问题，无论是对于初学者还是有经验的老司机。它的难处并不在于概念多难理解，而是情况多且杂，看似相同的情况结果却又出人意料，很少有人能保证时刻都能做出正确的判断。")]),t._v(" "),a("p",[t._v("因此，这篇文章希望能讲的足够细致和明确，让大家能够在日常使用中，能够尽快的搞清楚类型转换的顺序和结果。")]),t._v(" "),a("p",[t._v("长文预警，建议先 mark, 分多次查看。")]),t._v(" "),a("h2",{attrs:{id:"_2-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 类型转换")]),t._v(" "),a("h3",{attrs:{id:"_2-1-什么叫类型转换？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-什么叫类型转换？","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 什么叫类型转换？")]),t._v(" "),a("p",[t._v("我们知道，JavaScript 中存在七种数据类型，在必要的时候，我们会对不同类型的值进行相互间的转换。比如说，在进行条件判断时，我们需要将其他类型的值转为布尔类型值，在使用 "),a("code",[t._v("console.log()")]),t._v(" 打印内容时，需要将其转为字符串输出。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-javascript-中的类型转换方式有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-javascript-中的类型转换方式有哪些？","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.2 JavaScript 中的类型转换方式有哪些？")]),t._v(" "),a("p",[t._v("在 JavaScript 中，分为显式类型转换和隐式类型转换。")]),t._v(" "),a("p",[t._v("其中，显式类型转换是我们为了功能需要，人为的将一种类型的值转换为另一中类型，转换的时机和结果都是我们预期的；而隐式类型转换则是 JavaScript 在代码运行时，未经我们允许而进行的强制类型转换。")]),t._v(" "),a("h2",{attrs:{id:"_3-显式类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-显式类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 显式类型转换")]),t._v(" "),a("h3",{attrs:{id:"_3-1-其他类型转换为字符串-tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-其他类型转换为字符串-tostring","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1 其他类型转换为字符串( ToString )")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值类型")]),t._v(" "),a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("转换后")]),t._v(" "),a("th",[t._v("调用法则")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("number")]),t._v(" "),a("td",[t._v("34")]),t._v(" "),a("td",[t._v("'34'")]),t._v(" "),a("td",[a("code",[t._v("String(34)")])])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("'true'")]),t._v(" "),a("td",[a("code",[t._v("String(true)")])])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("'false'")]),t._v(" "),a("td",[a("code",[t._v("String(false)")])])]),t._v(" "),a("tr",[a("td",[t._v("undefiend")]),t._v(" "),a("td",[t._v("undefined")]),t._v(" "),a("td",[t._v("'undefined'")]),t._v(" "),a("td",[a("code",[t._v("String(undefined)")])])]),t._v(" "),a("tr",[a("td",[t._v("null")]),t._v(" "),a("td",[t._v("null")]),t._v(" "),a("td",[t._v("'null'")]),t._v(" "),a("td",[a("code",[t._v("String(null)")])])]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("{ a: 'fa' }")]),t._v(" "),a("td",[t._v('"[object Object]"')]),t._v(" "),a("td",[a("code",[t._v("String({a: 'fa'})")])])]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("new String(45)")]),t._v(" "),a("td",[t._v("'45'")]),t._v(" "),a("td",[a("code",[t._v("String(new String(45))")])])]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("[1, 2]")]),t._v(" "),a("td",[t._v("'1,2'")]),t._v(" "),a("td",[a("code",[t._v("String([1,2])")])])]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("function() {var d;}")]),t._v(" "),a("td",[t._v('"function() { var d; }"')]),t._v(" "),a("td",[a("code",[t._v("String(function() {var d;})")])])])])]),t._v(" "),a("p",[t._v("其他类型的值转换为字符串，是通过调用原生函数"),a("code",[t._v("String()")]),t._v("实现，但不同类型值的实现却有明显的差异。")]),t._v(" "),a("p",[t._v("对于基本类型的值，直接将其转化为值的字符串形式。而对于对象类型来说，便有些复杂了。")]),t._v(" "),a("p",[t._v("首先，每个对象内部都有一个 "),a("strong",[a("code",[t._v("[[Class]]")])]),t._v(" 属性，我们通过"),a("code",[t._v("Object.prototype.toString()")]),t._v(" 方法可以得到这个属性的字符串值。")]),t._v(" "),a("p",[t._v("对于对象(如"),a("code",[t._v("{ a: 'ff'; }")]),t._v(")而言，除非自己定义 "),a("code",[t._v("toString()")]),t._v(" 方法，否则，调用   "),a("code",[t._v("String()")]),t._v(" 方法将返回和调用 "),a("code",[t._v("Object.prototype.toString()")]),t._v(" 相同的值。(如 : "),a("code",[t._v('"[object Object]"')]),t._v(")。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj_1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lalala'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj_2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fasfa"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '[object Object]'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'fasfa'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("其次， JavaScript 中，除了普通对象，还有以下几种:")]),t._v(" "),a("ol",[a("li",[a("h4",{attrs:{id:"封装对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装对象","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("封装对象")])]),t._v(" "),a("p",[t._v("对于基本类型值 "),a("code",[t._v("string")]),t._v("、"),a("code",[t._v("number")]),t._v("、"),a("code",[t._v("boolean")]),t._v(" 是没有 "),a("code",[t._v(".length")]),t._v(" 及"),a("code",[t._v("toString()")]),t._v(" 方法的，因此，JavaScript 提供了内建函数 "),a("code",[t._v("String()")]),t._v("、"),a("code",[t._v("Number()")]),t._v("、"),a("code",[t._v("Boolean()")]),t._v(" ，通过 "),a("code",[t._v("new")]),t._v(" 调用后会将基本类型值封装为一个对象。")]),t._v(" "),a("p",[t._v("如果想要取到封装对象中的基本类型值，可以使用 "),a("code",[t._v("valueOf()")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string 类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i am string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  'string'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string 封装对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i am sringObject'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拆封")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// i am sringObject")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("那对于封装对象，"),a("code",[t._v("String()")]),t._v(" 会返回什么值呢？")]),t._v(" "),a("p",[t._v("事实上，封装对象对于 "),a("code",[t._v("toString()")]),t._v(" 方法进行了封装，因此，对封装对象调用 "),a("code",[t._v("String()")]),t._v(" 方法，将会返回封装对象调用"),a("code",[t._v("toString()")]),t._v(" 方法返回的值。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" numObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Number {0}")]),t._v("\nnumObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '0'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '0'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("h4",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("函数")])]),t._v(" "),a("p",[t._v("对于函数来说，它也包装了自己的 "),a("code",[t._v("toString()")]),t._v("方法，因此，调用 "),a("code",[t._v("String()")]),t._v(" 方法时将返回函数字符串化后的值。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"function bar() {↵  console.log('bar');↵}\"")]),t._v("\nbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"function bar() {↵  console.log('bar');↵}\"")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Function]"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("从上例可以看到，"),a("code",[t._v("String()")]),t._v(" 与 "),a("code",[t._v("toString()")]),t._v(" 方法调用的是函数自己封装的"),a("code",[t._v("toSring()")]),t._v("，如果调用对象的 "),a("code",[t._v("toString()")]),t._v(" 方法，则函数与普通对象一样，返回的是函数对象内部的 "),a("code",[t._v("[[Class]]")]),t._v(" 属性。")])]),t._v(" "),a("li",[a("h4",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("数组")])]),t._v(" "),a("p",[t._v("数组同函数一样，同样包装了自己的  "),a("code",[t._v("toString()")]),t._v(" 方法。此方法会将数组中的每一项用逗号连接成一个字符串。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1,4,6"')]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1,4,6"')]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Array]"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-2-其他类型值转为数字-tonumber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-其他类型值转为数字-tonumber","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2 其他类型值转为数字( ToNumber )")]),t._v(" "),a("p",[t._v("同样，先感受一下什么叫绝望？~~")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值类型")]),t._v(" "),a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("转换后")]),t._v(" "),a("th",[t._v("调用法则")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("string")]),t._v(" "),a("td",[t._v("'34'")]),t._v(" "),a("td",[t._v("34")]),t._v(" "),a("td",[a("code",[t._v("Number('34')")])])]),t._v(" "),a("tr",[a("td",[t._v("string")]),t._v(" "),a("td",[t._v("''")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[a("code",[t._v("Number('')")])])]),t._v(" "),a("tr",[a("td",[t._v("string")]),t._v(" "),a("td",[t._v("'34fad'")]),t._v(" "),a("td",[t._v("NaN")]),t._v(" "),a("td",[a("code",[t._v("Number('34fad')")])])]),t._v(" "),a("tr",[a("td",[t._v("string")]),t._v(" "),a("td",[t._v("'34fad'、'34.24'、'34'")]),t._v(" "),a("td",[t._v("34")]),t._v(" "),a("td",[a("code",[t._v("parseInt('34fad')")])])]),t._v(" "),a("tr",[a("td",[t._v("string")]),t._v(" "),a("td",[t._v("'34fad'、'34'")]),t._v(" "),a("td",[t._v("34")]),t._v(" "),a("td",[a("code",[t._v("parseFloat(值)")])])]),t._v(" "),a("tr",[a("td",[t._v("string")]),t._v(" "),a("td",[t._v("'34.34'")]),t._v(" "),a("td",[t._v("34.34")]),t._v(" "),a("td",[a("code",[t._v("parseFloat(值)")])])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[a("code",[t._v("Number(true)")])])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[a("code",[t._v("Number(false)")])])]),t._v(" "),a("tr",[a("td",[t._v("undefiend")]),t._v(" "),a("td",[t._v("undefined")]),t._v(" "),a("td",[t._v("NaN")]),t._v(" "),a("td",[a("code",[t._v("Number(undefined)")])])]),t._v(" "),a("tr",[a("td",[t._v("null")]),t._v(" "),a("td",[t._v("null")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[a("code",[t._v("Number(null)")])])]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("{ a: 'fa' }")]),t._v(" "),a("td",[t._v("NaN")]),t._v(" "),a("td",[a("code",[t._v("Number({a: 'fa'})")])])]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("new String('fff')")]),t._v(" "),a("td",[t._v("NaN")]),t._v(" "),a("td",[a("code",[t._v("Number(new String('fff'))")])])]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("[]")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[a("code",[t._v("Number([])")])])]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("[1, 2]")]),t._v(" "),a("td",[t._v("NaN")]),t._v(" "),a("td",[a("code",[t._v("Number([1,2])")])])]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("function() {var d;}")]),t._v(" "),a("td",[t._v("NaN")]),t._v(" "),a("td",[a("code",[t._v("Number(function() {var d;})")])])])])]),t._v(" "),a("p",[t._v("看完一脸懵逼有没有？！哈哈，不用害怕，乍看上去，大概会觉得异常混乱，其实稍加整理，不外乎以下几种情况：")]),t._v(" "),a("ol",[a("li",[a("h4",{attrs:{id:"转换后值为-nan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换后值为-nan","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("转换后值为 NaN")])]),t._v(" "),a("p",[t._v("数字与字符串不同，并不是任何类型值都能转为数字，因此，就会有 NaN，意思就是 "),a("code",[t._v("not a number")]),t._v("。")]),t._v(" "),a("p",[t._v("诸如包含非数字的字符串、undefined、非空数组，部分对象，都是我们知道无法转化为一个数字的。")])]),t._v(" "),a("li",[a("h4",{attrs:{id:"boolean-类型值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-类型值","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("boolean 类型值")])]),t._v(" "),a("p",[t._v("对于 "),a("code",[t._v("true")]),t._v("和  "),a("code",[t._v("false")]),t._v(" ，"),a("code",[t._v("true")]),t._v(" 转换为 1，"),a("code",[t._v("false")]),t._v(" 转为 0。")])]),t._v(" "),a("li",[a("h4",{attrs:{id:"带有数字的字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#带有数字的字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("带有数字的字符串")])]),t._v(" "),a("p",[t._v("从上面我们可以看到，对于带有数字的字符串，有三种方法进行转换，但规则不同。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Number()")]),t._v(" 方法会对字符串整体进行转换， 它会先判断这个字符串是否是个正确的数字字符串，如果不是，则会返回 "),a("code",[t._v("NaN")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("parseInt()")]),t._v(" 方法则会对字符串从左往右依次解析，直到遇到第一个非数字字符(包括小数点)，如果最左边的字符是非数字字符，则返回 "),a("code",[t._v("NaN")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("parseFloat()")]),t._v(" 方法解析顺序同 "),a("code",[t._v("parseInt()")]),t._v(" 相同，不同的是它遇到"),a("strong",[t._v("第一个")]),t._v("小数点时会正常往右继续解析，直至遇到非数字字符停止。")])])]),t._v(" "),a("p",[t._v("其实严格来讲，只有 "),a("code",[t._v("Number()")]),t._v(" 方法是进行转换操作，而后两者属于将字符串"),a("strong",[t._v("解析")]),t._v(" 为数字，但为了讲解方便，我将它们放在一起讲述。")])]),t._v(" "),a("li",[a("h4",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("对象")])]),t._v(" "),a("p",[t._v("对于对象而言，会先将对象转为基本类型值( ToPrimitive )，再对基本类型值调用 "),a("code",[t._v("Number()")]),t._v(" 方法。")]),t._v(" "),a("p",[t._v("那如何将对象转为基本类型值？首先会调用对象的 "),a("code",[t._v("valueOf()")]),t._v(" 方法，如果没有此方法或者此方法返回值不是基本类型值，则会调用"),a("code",[t._v("toString()")]),t._v(" 方法，如果 "),a("code",[t._v("toString()")]),t._v(" 方法不存在或者返回值也不是基本类型值，会产生 "),a("code",[t._v("TypeError")]),t._v(" 错误。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 普通对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nomalObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'56'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnomalObj "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { a: '56'}")]),t._v("\nnomalObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Number(nomalObj) 相当于Number("[object Object]") ')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Object]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nomalObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// valueOf() 返回基本类型值的对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj_1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'56'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  valueOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'23'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '23'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Number(obj_1) 相当于 Number('23');")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'23'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 23")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 23")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// valueOf() 返回非基本类型值，toString() 返回基本类型值的对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj_2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'56'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  valueOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {b: 34}")]),t._v("\nobj_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Number(obj_2) 相当于 Number(false)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br")])]),a("p",[t._v("上面的规则，适用于我们所说的所有对象，比如数组，封装对象和函数。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-3-其他类型转换为-boolean-值-toboolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-其他类型转换为-boolean-值-toboolean","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.3 其他类型转换为 boolean 值( ToBoolean )")]),t._v(" "),a("p",[t._v("我们可以通过 "),a("code",[t._v("Boolean()")]),t._v("方法 或"),a("code",[t._v("!!")]),t._v("运算符来显式的将一个值转换为布尔值。")]),t._v(" "),a("p",[t._v("相对来说，判断一个值是 "),a("code",[t._v("true")]),t._v(" 还是 "),a("code",[t._v("false")]),t._v(" 则比较容易，我们只需要记住以下几种值会转换为 "),a("code",[t._v("false")]),t._v("，而其他值，均为 "),a("code",[t._v("true")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("null")]),t._v(" "),a("li",[t._v("false")]),t._v(" "),a("li",[t._v("+0、-0 和 NaN")]),t._v(" "),a("li",[t._v('""')])]),t._v(" "),a("p",[t._v("当我们看到 "),a("code",[t._v("[]、{}")]),t._v(" 甚至是 "),a("code",[t._v("\"''\"")]),t._v(" 时，也一定要记住，它们是真值。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fasle")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"\"'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"_4-隐式强制类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-隐式强制类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 隐式强制类型转换")]),t._v(" "),a("p",[t._v("除了进行强制类型转换，JavaScript 会在运行时根据需要，自动进行类型的转换，尽管这个特点饱受争议，但不得不承认，某些情况下我们仍旧更喜欢使用某些隐式转换规则。")]),t._v(" "),a("p",[t._v("一旦某些隐式的规则被接受并广泛使用，从某种意义上来讲，这些规则便同显式转换一样。")]),t._v(" "),a("h3",{attrs:{id:"_4-1-奇怪的-号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-奇怪的-号","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.1 奇怪的 "),a("code",[t._v("+")]),t._v(" 号")]),t._v(" "),a("p",[t._v("先看一一个最常见的例子：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '56'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '66'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("之所以会产生上例中的状况，原因就在于在"),a("strong",[t._v("JavaScript 中，"),a("code",[t._v("+")]),t._v(" 运算符既可以作用于"),a("code",[t._v("number")]),t._v(" 类型值，也可以作用于 "),a("code",[t._v("string")]),t._v(" 类型值。前者进行数字相加，后者则进行字符串的拼接。")])]),t._v(" "),a("p",[t._v("这就是为什么"),a("code",[t._v("5 + 5 = 10")]),t._v(" 而 "),a("code",[t._v("'6' + '6' = '66'")]),t._v("。而当 "),a("code",[t._v("+")]),t._v(" 号两边既有数字也有字符串时，则会隐式的将数字转换为字符串，然后进行字符串的拼接。")]),t._v(" "),a("p",[t._v("那两边没有字符串的情况呢？比如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '1,44'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '1,42,3'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("为什么会这样？原来"),a("strong",[t._v("只要"),a("code",[t._v("+")]),t._v(" 的其中一个操作数可以通过某种方式（"),a("code",[t._v("toPrimitive")]),t._v("）转换为字符串，就会进行字符串的拼接。")])]),t._v(" "),a("p",[t._v("我们知道，数组"),a("code",[t._v("[1,4]")]),t._v(" 可以通过 "),a("code",[t._v("toString()")]),t._v(" 方法返回字符串 "),a("code",[t._v("'1,4'")]),t._v("，因此，"),a("code",[t._v("[1,4] + 4")]),t._v(" 就相当于 "),a("code",[t._v("'1,4' + 4")]),t._v("。")]),t._v(" "),a("p",[t._v("因为这个特性，我们在想将一个数字 a 转换为字符串时，便可以直接使用 "),a("code",[t._v("a + ''")]),t._v(" 的形式即可。相对于显式使用"),a("code",[t._v("String(a)")]),t._v("，隐式转换则更加简洁。")]),t._v(" "),a("p",[t._v("从数组的例子我们可以看到，除了数字，其他类型的值也可以通过 "),a("code",[t._v("+ ' '")]),t._v(" 的形式转化为字符串。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("但有一点需要注意，对于对象而言，使用  "),a("code",[t._v("String()")]),t._v(" 方法是直接取这个对象 "),a("code",[t._v("toString()")]),t._v(" 方法的返回值，而 "),a("code",[t._v("+ ' '")]),t._v(" ,则会对这个对象调用 "),a("code",[t._v("valueOf")]),t._v(" 反法，然后对 "),a("code",[t._v("valueOf")]),t._v(" 的返回值调用 "),a("code",[t._v("toString()")]),t._v("，将其转换为字符串。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  valueOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '45'")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  // '4'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("好在除非我们特意去改变一个对象的 "),a("code",[t._v("valueOf")]),t._v(" 及 'toString()' 方法，通过上述两个方式的转换后的结果都是一致的。")]),t._v(" "),a("h3",{attrs:{id:"_4-2-有用的-号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-有用的-号","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2 有用的 "),a("code",[t._v("-")]),t._v(" 号")]),t._v(" "),a("p",[t._v("与 "),a("code",[t._v("+")]),t._v(" 号不同的是，"),a("code",[t._v("-")]),t._v(" 号只能用于数字的相减，对于它两边的操作数，都会经过隐式类型转换转为数字。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'34'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 30")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 30")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("根据上例，我们可看到，如果 "),a("code",[t._v("-")]),t._v(" 号两边是字符串，则会将他们强制转换为数字，如果 "),a("code",[t._v("-")]),t._v(" 两边不是字符串，则会先将其转为字符串，再将这个字符串转为数字。")]),t._v(" "),a("h3",{attrs:{id:"_4-3-隐式转换为布尔值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-隐式转换为布尔值","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.3 隐式转换为布尔值")]),t._v(" "),a("p",[t._v("将其他类型值隐式转换为布尔值是我们最常用的一种转换。因为程序的编写实质上就是不停的进行判断。")]),t._v(" "),a("p",[t._v("在以下场景中，都是进行判断，而只要传入的值不是布尔值，都会通过隐式类型转换转为布尔值。")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("if (..) {}")]),t._v(" 语句中的条件判断表达式。")]),t._v(" "),a("li",[a("code",[t._v("for ( .. ; .. ; ..)")]),t._v(" 语句中的条件判断表达式。")]),t._v(" "),a("li",[a("code",[t._v("while (..)")]),t._v(" 和 "),a("code",[t._v("do ... while ( ..)")]),t._v("  中的条件判断表达式。")]),t._v(" "),a("li",[a("code",[t._v("? :")]),t._v(" 中的条件判断表达式。")]),t._v(" "),a("li",[t._v("逻辑或 "),a("code",[t._v("||")]),t._v(" 或逻辑与 "),a("code",[t._v("&&")]),t._v(" 左边的操作数。")])]),t._v(" "),a("p",[t._v("在这些情况下，都将会进行其他类型值到布尔类型值的隐式转换，规则同显式调用 "),a("code",[t._v("Boolean()")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_5-最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-最后","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 最后")]),t._v(" "),a("p",[t._v("上面就是不同数据类型直接显式或隐式的转换规则，我们不需要将每一种情况都牢记在心，但有必要对他们进行充分的了解，这可以保证我们在实际写代码时避免不少奇怪又难以排查的 bug 。")])])},[],!1,null,null,null);s.default=e.exports}}]);